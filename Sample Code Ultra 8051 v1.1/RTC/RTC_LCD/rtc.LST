C51 COMPILER V9.02   RTC                                                                   02/11/2015 21:55:50 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE RTC
OBJECT MODULE PLACED IN rtc.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE rtc.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /***************************************************************************************************
   2                                             ExploreEmbedded      
   3          ****************************************************************************************************
   4           * File:   rtc.c
   5           * Version: 15.0
   6           * Author: ExploreEmbedded
   7           * Website: http://www.exploreembedded.com/wiki
   8           * Description: Contains the library functions for RTC-Ds1307 date and time read write
   9          
  10          The libraries have been tested on ExploreEmbedded development boards. We strongly believe that the 
  11          library works on any of development boards for respective controllers. However, ExploreEmbedded 
  12          disclaims any kind of hardware failure resulting out of usage of libraries, directly or indirectly.
  13          Files may be subject to change without prior notice. The revision history contains the information 
  14          related to updates. 
  15          
  16          
  17          GNU GENERAL PUBLIC LICENSE: 
  18              This program is free software: you can redistribute it and/or modify
  19              it under the terms of the GNU General Public License as published by
  20              the Free Software Foundation, either version 3 of the License, or
  21              (at your option) any later version.
  22          
  23              This program is distributed in the hope that it will be useful,
  24              but WITHOUT ANY WARRANTY; without even the implied warranty of
  25              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  26              GNU General Public License for more details.
  27          
  28              You should have received a copy of the GNU General Public License
  29              along with this program.  If not, see <http://www.gnu.org/licenses/>.
  30          
  31          Errors and omissions should be reported to codelibraries@exploreembedded.com
  32           **************************************************************************************************/
  33          
  34          
  35          
  36          /***************************************************************************************************
  37                                       Revision History
  38          ****************************************************************************************************
  39          15.0: Initial version 
  40          ***************************************************************************************************/
  41          
  42          #include "rtc.h"
  43          #include "i2c.h"
  44          
  45          
  46          
  47          
  48          
  49          /***************************************************************************************************
  50                                   void RTC_Init()
  51           ***************************************************************************************************
  52           * I/P Arguments: none.
  53           * Return value : none
  54          
  55           * description :This function is used to Initialize the Ds1307 RTC.
C51 COMPILER V9.02   RTC                                                                   02/11/2015 21:55:50 PAGE 2   

  56          ***************************************************************************************************/
  57          void RTC_Init()
  58          {
  59   1              I2C_Init();                             // Initialize the I2c module.
  60   1              I2C_Start();                            // Start I2C communication
  61   1      
  62   1              I2C_Write(C_Ds1307WriteMode_U8);        // Connect to DS1307 by sending its ID on I2c Bus
  63   1              I2C_Write(C_Ds1307ControlRegAddress_U8);// Select the Ds1307 ControlRegister to configure Ds1307
  64   1      
  65   1              I2C_Write(0x00);                        // Write 0x00 to Control register to disable SQW-Out
  66   1      
  67   1              I2C_Stop();                             // Stop I2C communication after initializing DS1307
  68   1      }
  69          
  70          
  71          
  72          
  73          
  74          
  75          /***************************************************************************************************
  76                  void RTC_SetTime(uint8_t var_hour_u8, uint8_t var_min_u8, uint8_t var_sec_u8)
  77          ****************************************************************************************************
  78           * I/P Arguments: uint8_t,uint8_t,uint8_t-->hh,mm,ss to Initialize the time into DS1307.
  79           * Return value : none
  80          
  81           * description  :This function is used to update the Time(hh,mm,ss) of Ds1307 RTC.
  82                           The new time is updated into the non volatile memory of Ds1307.
  83                  Note: The I/P arguments should of BCD, 
  84                        like 0x12,0x39,0x26 for 12hr,39min and 26sec.                      
  85          ***************************************************************************************************/
  86          void RTC_SetTime(uint8_t var_hour_u8, uint8_t var_min_u8, uint8_t var_sec_u8)
  87          {
  88   1              I2C_Start();                            // Start I2C communication
  89   1      
  90   1              I2C_Write(C_Ds1307WriteMode_U8);        // connect to DS1307 by sending its ID on I2c Bus
  91   1              I2C_Write(C_Ds1307SecondRegAddress_U8); // Select the SEC RAM address
  92   1      
  93   1              I2C_Write(var_sec_u8);                          // Write sec from RAM address 00H
  94   1              I2C_Write(var_min_u8);                          // Write min from RAM address 01H
  95   1              I2C_Write(var_hour_u8);                         // Write hour from RAM address 02H
  96   1      
  97   1              I2C_Stop();                             // Stop I2C communication after Setting the Time
  98   1      }
  99          
 100          
 101          
 102          
 103          
 104          
 105          
 106          /***************************************************************************************************
 107                    void RTC_SetDate(uint8_t var_day_u8, uint8_t var_month_u8, uint8_t var_year_u8)
 108          ****************************************************************************************************
 109           * I/P Arguments: uint8_t,uint8_t,uint8_t-->day,month,year to Initialize the Date into DS1307.
 110           * Return value : none
 111          
 112           * description  :This function is used to set Date(dd,mm,yy) into the Ds1307 RTC.
 113                           The new Date is updated into the non volatile memory of Ds1307.
 114                          Note: The I/P arguments should of BCD, 
 115                        like 0x15,0x08,0x47 for 15th day,8th month and 47th year.                          
 116          ***************************************************************************************************/
 117          void RTC_SetDate(uint8_t var_day_u8, uint8_t var_month_u8, uint8_t var_year_u8)
C51 COMPILER V9.02   RTC                                                                   02/11/2015 21:55:50 PAGE 3   

 118          {
 119   1              I2C_Start();                          // Start I2C communication
 120   1      
 121   1              I2C_Write(C_Ds1307WriteMode_U8);          // connect to DS1307 by sending its ID on I2c Bus
 122   1              I2C_Write(C_Ds1307DateRegAddress_U8); // Request DAY RAM address at 04H
 123   1      
 124   1              I2C_Write(var_day_u8);                        // Write date on RAM address 04H
 125   1              I2C_Write(var_month_u8);                              // Write month on RAM address 05H
 126   1              I2C_Write(var_year_u8);                       // Write year on RAM address 06h
 127   1      
 128   1              I2C_Stop();                                           // Stop I2C communication after Setting the Date
 129   1      }
 130          
 131          
 132          
 133          
 134          
 135          
 136          /***************************************************************************************************
 137                void RTC_GetTime(uint8_t *ptr_hour_u8,uint8_t *ptr_min_u8,uint8_t *ptr_sec_u8)
 138          ****************************************************************************************************
 139           * I/P Arguments: uint8_t *,uint8_t *,uint8_t *-->pointers to get the hh,mm,ss.
 140           * Return value : none
 141          
 142           * description  :This function is used to get the Time(hh,mm,ss) from Ds1307 RTC.
 143          
 144                  Note: The time read from Ds1307 will be of BCD format, 
 145                        like 0x12,0x39,0x26 for 12hr,39min and 26sec.     
 146          ***************************************************************************************************/
 147          void RTC_GetTime(uint8_t *ptr_hour_u8,uint8_t *ptr_min_u8,uint8_t *ptr_sec_u8)
 148          {
 149   1              I2C_Start();                            // Start I2C communication
 150   1      
 151   1              I2C_Write(C_Ds1307WriteMode_U8);            // connect to DS1307 by sending its ID on I2c Bus
 152   1              I2C_Write(C_Ds1307SecondRegAddress_U8); // Request Sec RAM address at 00H
 153   1      
 154   1              I2C_Stop();                                         // Stop I2C communication after selecting Sec Register
 155   1      
 156   1              I2C_Start();                                // Start I2C communication
 157   1              I2C_Write(C_Ds1307ReadMode_U8);         // connect to DS1307(Read mode) by sending its ID
 158   1      
 159   1              *ptr_sec_u8 = I2C_Read(1);                // read second and return Positive ACK
 160   1              *ptr_min_u8 = I2C_Read(1);                  // read minute and return Positive ACK
 161   1              *ptr_hour_u8 = I2C_Read(0);               // read hour and return Negative/No ACK
 162   1      
 163   1              I2C_Stop();                                     // Stop I2C communication after reading the Time
 164   1      }
 165          
 166          
 167          
 168          
 169          
 170          
 171          
 172          /***************************************************************************************************
 173                void RTC_GetDate(uint8_t *ptr_day_u8,uint8_t *ptr_month_u8,uint8_t *ptr_year_u8)
 174          ****************************************************************************************************
 175           * I/P Arguments: uint8_t *,uint8_t *,uint8_t *-->pointers to get the y,m,d.
 176           * Return value : none
 177          
 178           * description  :This function is used to get the Date(d,m,y) from Ds1307 RTC.
 179          
C51 COMPILER V9.02   RTC                                                                   02/11/2015 21:55:50 PAGE 4   

 180                  Note: The date read from Ds1307 will be of BCD format, 
 181                        like 0x15,0x08,0x47 for 15th day,8th month and 47th year.                   
 182          ***************************************************************************************************/
 183          void RTC_GetDate(uint8_t *ptr_day_u8,uint8_t *ptr_month_u8,uint8_t *ptr_year_u8)
 184          {
 185   1              I2C_Start();                          // Start I2C communication
 186   1      
 187   1              I2C_Write(C_Ds1307WriteMode_U8);              // connect to DS1307 by sending its ID on I2c Bus
 188   1              I2C_Write(C_Ds1307DateRegAddress_U8); // Request DAY RAM address at 04H
 189   1      
 190   1              I2C_Stop();                                       // Stop I2C communication after selecting DAY Register
 191   1      
 192   1      
 193   1              I2C_Start();                              // Start I2C communication
 194   1              I2C_Write(C_Ds1307ReadMode_U8);       // connect to DS1307(Read mode) by sending its ID
 195   1      
 196   1              *ptr_day_u8 = I2C_Read(1);              // read Day and return Positive ACK
 197   1              *ptr_month_u8 = I2C_Read(1);            // read Month and return Positive ACK
 198   1              *ptr_year_u8 = I2C_Read(0);             // read Year and return Negative/No ACK
 199   1      
 200   1              I2C_Stop();                                   // Stop I2C communication after reading the Date
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    254    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
