C51 COMPILER V9.02   KEYPAD                                                                02/06/2016 10:56:30 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN keypad.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE keypad.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*----------------------------------------------------------------------------------
   2                                  8051 4x4 Keypad Library
   3          Filename: keypad.c
   4          Controller: P89V51RD2/89c51(8051 family)
   5          Oscillator: 11.0592 MHz
   6          Author: XploreLabz
   7          website: www.xplorelabz.com
   8          
   9           ----------------------------------------------------------------------------------
  10           Note:
  11            1.Rows are connected to lower 4-bits of P1
  12            1.Cols are connected to higher 4-bits of P1
  13                      ___________________
  14                     |    |    |    |    |
  15                     | 0  | 1  | 2  | 3  |--------- R0
  16                     |____|____|____|____|
  17                     |    |    |    |    |
  18                 | 4  | 5  | 6  | 7  |--------- R1
  19                     |____|____|____|____|
  20                     |    |    |    |    |
  21                 | 8  | 9  | A  | B  |--------- R2
  22                 |____|____|____|____|
  23                 |    |    |    |    |
  24                 | C  | D  | E  | F  |--------- R3
  25                     |____|____|____|____|
  26                       |    |    |    |
  27                       |    |    |    |____________ C3
  28                       |    |    |
  29                       |    |    |_________________ C2
  30                       |    |
  31                       |    |______________________ C1
  32                       |
  33                       |___________________________ C0
  34          
  35          ----------------------------------------------------------------------------------*/
  36          
  37          
  38          
  39          #include <reg51.h>
  40          #include "keypad.h"
  41          #include "delay.h"
  42          
  43          
  44          
  45          #define ROW P2   //Lower four bits of P1 are used as ROWs
  46          #define COL P2   //Higher four bits of P1 are used as COLs
  47          
  48          
  49          
  50          
  51          /*---------------------------------------------------------------------------------
  52                             void KEYPAD_Init()
  53           ----------------------------------------------------------------------------------
  54           * I/P Arguments:none
  55           * Return value : none
C51 COMPILER V9.02   KEYPAD                                                                02/06/2016 10:56:30 PAGE 2   

  56          
  57           * description  : This function the rows and colums for keypad scan
  58                  1.ROW lines are configured as Output.
  59                  2.Column Lines are configured as Input.
  60          -----------------------------------------------------------------------------------*/
  61          void KEYPAD_Init()
  62          {
  63   1             ROW=0xF0;           // Configure Row lines as O/P and Column lines as I/P
  64   1      }
  65          
  66          
  67          
  68          
  69          
  70          /*---------------------------------------------------------------------------------
  71                             void KEYPAD_WaitForKeyRelease()
  72           ----------------------------------------------------------------------------------
  73           * I/P Arguments:none
  74          
  75           * Return value : none
  76          
  77           * description  : This function waits till the previous key is released.
  78                  1.All the ROW lines are pulled low.
  79                  2.Column Lines are read to check the key press.
  80                  3.If all the Keys are released then Column lines will be High(0xF0)
  81          -----------------------------------------------------------------------------------*/
  82          void KEYPAD_WaitForKeyRelease()
  83          {
  84   1         unsigned char key;
  85   1          do
  86   1          {
  87   2              ROW=0xF0;           // Pull the ROW lines to low and Column lines high.
  88   2            key=COL & 0xF0;     // Read the Columns, to check the key press
  89   2             }while(key!=0xF0);   // Wait till the Key is released,
  90   1                                  // If no Key is pressed, Column lines will be High(0xF0)
  91   1      }
  92          
  93          
  94          
  95          
  96          
  97          /*---------------------------------------------------------------------------------
  98                             void KEYPAD_WaitForKeyPress()
  99           ----------------------------------------------------------------------------------
 100           * I/P Arguments:none
 101          
 102           * Return value : none
 103          
 104           * description  : This function waits till a new key is pressed.
 105                  1.All the ROW lines are pulled low.
 106                  2.Column Lines are read to check the key press.
 107                  3.If any Key is pressed then corresponding Column Line goes low.
 108          
 109                  4.Wait for Some time and perform the above operation to ensure
 110                    the True Key Press before decoding the KEY.
 111          -----------------------------------------------------------------------------------*/
 112          void KEYPAD_WaitForKeyPress()
 113          {
 114   1        unsigned char key;
 115   1        do
 116   1         {
 117   2         do
C51 COMPILER V9.02   KEYPAD                                                                02/06/2016 10:56:30 PAGE 3   

 118   2            {
 119   3            ROW=0xF0;     // Pull the ROW lines to low and Column lines high.
 120   3            key=COL & 0xF0;   // Read the Columns, to check the key press
 121   3           }while(key==0xF0); // Wait till the Key is pressed,
 122   2                    // if a Key is pressed the corresponding Column line go low
 123   2      
 124   2           DELAY_ms(1);     // Wait for some time(debounce Time);
 125   2      
 126   2           ROW=0xF0;      // After debounce time, perform the above operation
 127   2           key=COL & 0xF0;    // to ensure the Key press.
 128   2      
 129   2        }while(key==0xF0);
 130   1      
 131   1       }
 132          
 133          
 134          
 135          
 136          
 137          /*---------------------------------------------------------------------------------
 138                             unsigned char KEYPAD_ScanKey()
 139           ----------------------------------------------------------------------------------
 140           * I/P Arguments:none
 141          
 142           * Return value : char--> Scancode of the Key Pressed
 143          
 144           * description  : This function scans all the rows to decode the key pressed.
 145                  1.Each time a ROW line is pulled low to detect the KEY.
 146                  2.Column Lines are read to check the key press.
 147                  3.If any Key is pressed then corresponding Column Line goes low.
 148          
 149                  4.Return the ScanCode(Combination of ROW & COL) for decoding the key.
 150          -----------------------------------------------------------------------------------*/
 151          unsigned char KEYPAD_ScanKey()
 152           {
 153   1      
 154   1         unsigned char ScanKey = 0xFE,i, key;
 155   1      
 156   1         for(i=0;i<0x04;i++)            // Scan All the 4-Rows for key press
 157   1          {
 158   2            ROW=ScanKey;                // Select 1-Row at a time for Scanning the Key
 159   2            key=COL & 0xF0;             // Read the Column, for key press
 160   2      
 161   2            if(key!=0xf0)               // If the KEY press is detected for the selected
 162   2               break;                   // ROW then stop Scanning,
 163   2      
 164   2           ScanKey=((ScanKey<<1)+0x01); // Rotate the ScanKey to SCAN the remaining Rows
 165   2          }
 166   1      
 167   1      
 168   1          key = COL;                    // Retun the COL status to decode the key
 169   1          return(key);
 170   1      }
 171          
 172          
 173          
 174          
 175          
 176          
 177          /*---------------------------------------------------------------------------------
 178                             unsigned char KEYPAD_GetKey()
 179           ----------------------------------------------------------------------------------
C51 COMPILER V9.02   KEYPAD                                                                02/06/2016 10:56:30 PAGE 4   

 180           * I/P Arguments:none
 181          
 182           * Return value : char--> ASCII value of the Key Pressed
 183          
 184           * description: This function waits till a key is pressed and retuns its ASCII Value
 185          
 186                  1.Wait till the previous key is released..
 187                  2.Wait for the new key press.
 188                  3.Scan all the rows one at atime for the pressed key.
 189                  4.Decode the key pressed depending on ROW-COL combination and retuns its
 190                    ASCII value.
 191          -----------------------------------------------------------------------------------*/
 192          unsigned char KEYPAD_GetKey()
 193          {
 194   1        unsigned char key;
 195   1      
 196   1            KEYPAD_WaitForKeyRelease();    // Wait for the previous key release
 197   1            DELAY_ms(1);
 198   1      
 199   1            KEYPAD_WaitForKeyPress();      // Wait for the new key press
 200   1            key = KEYPAD_ScanKey();        // Scan for the key pressed.
 201   1      
 202   1         switch(key)                       // Decode the key
 203   1           {
 204   2               case 0xe7: key='C'; break;
 205   2               case 0xeb: key='D'; break;
 206   2               case 0xed: key='E'; break;
 207   2               case 0xee: key='F'; break;
 208   2             case 0xd7: key='8'; break;
 209   2           case 0xdb: key='9'; break;
 210   2           case 0xdd: key='A'; break;
 211   2           case 0xde: key='B'; break;
 212   2             case 0xb7: key='4'; break;
 213   2           case 0xbb: key='5'; break;
 214   2           case 0xbd: key='6'; break;
 215   2           case 0xbe: key='7'; break;
 216   2           case 0x77: key='0'; break; 
 217   2           case 0x7b: key='1'; break; 
 218   2           case 0x7d: key='2'; break;  
 219   2           case 0x7e: key='3'; break;
 220   2               default: key='z';
 221   2            }
 222   1         return(key);                      // Return the key
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
